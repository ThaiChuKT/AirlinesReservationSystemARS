// <auto-generated />
using System;
using ARS.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ARS.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20251029121905_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("ARS.Models.City", b =>
                {
                    b.Property<int>("CityID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("CityID"));

                    b.Property<string>("AirportCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("CityName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("CityID");

                    b.HasIndex("AirportCode")
                        .IsUnique();

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            CityID = 1,
                            AirportCode = "MNL",
                            CityName = "Manila",
                            Country = "Philippines"
                        },
                        new
                        {
                            CityID = 2,
                            AirportCode = "CEB",
                            CityName = "Cebu",
                            Country = "Philippines"
                        },
                        new
                        {
                            CityID = 3,
                            AirportCode = "NRT",
                            CityName = "Tokyo",
                            Country = "Japan"
                        },
                        new
                        {
                            CityID = 4,
                            AirportCode = "SIN",
                            CityName = "Singapore",
                            Country = "Singapore"
                        },
                        new
                        {
                            CityID = 5,
                            AirportCode = "HKG",
                            CityName = "Hong Kong",
                            Country = "Hong Kong"
                        });
                });

            modelBuilder.Entity("ARS.Models.Flight", b =>
                {
                    b.Property<int>("FlightID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("FlightID"));

                    b.Property<string>("AircraftType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("ArrivalTime")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("BaseFare")
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime>("DepartureTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("DestinationCityID")
                        .HasColumnType("int");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<string>("FlightNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("OriginCityID")
                        .HasColumnType("int");

                    b.Property<int?>("PolicyID")
                        .HasColumnType("int");

                    b.Property<int>("TotalSeats")
                        .HasColumnType("int");

                    b.HasKey("FlightID");

                    b.HasIndex("DestinationCityID");

                    b.HasIndex("FlightNumber")
                        .IsUnique();

                    b.HasIndex("OriginCityID");

                    b.HasIndex("PolicyID");

                    b.ToTable("Flights");
                });

            modelBuilder.Entity("ARS.Models.Payment", b =>
                {
                    b.Property<int>("PaymentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("PaymentID"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("ReservationID")
                        .HasColumnType("int");

                    b.Property<string>("TransactionRefNo")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("TransactionStatus")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("PaymentID");

                    b.HasIndex("ReservationID");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("ARS.Models.PricingPolicy", b =>
                {
                    b.Property<int>("PolicyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("PolicyID"));

                    b.Property<int>("DaysBeforeDeparture")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<decimal>("PriceMultiplier")
                        .HasColumnType("decimal(5,2)");

                    b.HasKey("PolicyID");

                    b.ToTable("PricingPolicies");

                    b.HasData(
                        new
                        {
                            PolicyID = 1,
                            DaysBeforeDeparture = 30,
                            Description = "Early Bird (30+ days)",
                            PriceMultiplier = 0.80m
                        },
                        new
                        {
                            PolicyID = 2,
                            DaysBeforeDeparture = 15,
                            Description = "Standard (15-29 days)",
                            PriceMultiplier = 1.00m
                        },
                        new
                        {
                            PolicyID = 3,
                            DaysBeforeDeparture = 7,
                            Description = "Late Booking (7-14 days)",
                            PriceMultiplier = 1.20m
                        },
                        new
                        {
                            PolicyID = 4,
                            DaysBeforeDeparture = 0,
                            Description = "Last Minute (0-6 days)",
                            PriceMultiplier = 1.50m
                        });
                });

            modelBuilder.Entity("ARS.Models.Refund", b =>
                {
                    b.Property<int>("RefundID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("RefundID"));

                    b.Property<decimal>("RefundAmount")
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime>("RefundDate")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("RefundPercentage")
                        .HasColumnType("decimal(5,2)");

                    b.Property<int>("ReservationID")
                        .HasColumnType("int");

                    b.HasKey("RefundID");

                    b.HasIndex("ReservationID");

                    b.ToTable("Refunds");
                });

            modelBuilder.Entity("ARS.Models.Reservation", b =>
                {
                    b.Property<int>("ReservationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ReservationID"));

                    b.Property<string>("BlockingNumber")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateOnly>("BookingDate")
                        .HasColumnType("date");

                    b.Property<string>("Class")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ConfirmationNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("FlightID")
                        .HasColumnType("int");

                    b.Property<int>("NumAdults")
                        .HasColumnType("int");

                    b.Property<int>("NumChildren")
                        .HasColumnType("int");

                    b.Property<int>("NumSeniors")
                        .HasColumnType("int");

                    b.Property<int>("ScheduleID")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateOnly>("TravelDate")
                        .HasColumnType("date");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ReservationID");

                    b.HasIndex("ConfirmationNumber")
                        .IsUnique();

                    b.HasIndex("FlightID");

                    b.HasIndex("ScheduleID");

                    b.HasIndex("UserID");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("ARS.Models.Schedule", b =>
                {
                    b.Property<int>("ScheduleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ScheduleID"));

                    b.Property<int?>("CityID")
                        .HasColumnType("int");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<int>("FlightID")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("ScheduleID");

                    b.HasIndex("CityID");

                    b.HasIndex("FlightID");

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("ARS.Models.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("UserID"));

                    b.Property<string>("Address")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<string>("CreditCardNumber")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("SkyMiles")
                        .HasColumnType("int");

                    b.HasKey("UserID");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserID = 1,
                            Email = "admin@ars.com",
                            FirstName = "Admin",
                            Gender = "M",
                            LastName = "User",
                            Password = "Admin@123",
                            Role = "Admin",
                            SkyMiles = 0
                        });
                });

            modelBuilder.Entity("ARS.Models.Flight", b =>
                {
                    b.HasOne("ARS.Models.City", "DestinationCity")
                        .WithMany("FlightsAsDestination")
                        .HasForeignKey("DestinationCityID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ARS.Models.City", "OriginCity")
                        .WithMany("FlightsAsOrigin")
                        .HasForeignKey("OriginCityID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ARS.Models.PricingPolicy", "PricingPolicy")
                        .WithMany("Flights")
                        .HasForeignKey("PolicyID")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("DestinationCity");

                    b.Navigation("OriginCity");

                    b.Navigation("PricingPolicy");
                });

            modelBuilder.Entity("ARS.Models.Payment", b =>
                {
                    b.HasOne("ARS.Models.Reservation", "Reservation")
                        .WithMany("Payments")
                        .HasForeignKey("ReservationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("ARS.Models.Refund", b =>
                {
                    b.HasOne("ARS.Models.Reservation", "Reservation")
                        .WithMany("Refunds")
                        .HasForeignKey("ReservationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("ARS.Models.Reservation", b =>
                {
                    b.HasOne("ARS.Models.Flight", "Flight")
                        .WithMany("Reservations")
                        .HasForeignKey("FlightID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ARS.Models.Schedule", "Schedule")
                        .WithMany("Reservations")
                        .HasForeignKey("ScheduleID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ARS.Models.User", "User")
                        .WithMany("Reservations")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Flight");

                    b.Navigation("Schedule");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ARS.Models.Schedule", b =>
                {
                    b.HasOne("ARS.Models.City", "City")
                        .WithMany("Schedules")
                        .HasForeignKey("CityID")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("ARS.Models.Flight", "Flight")
                        .WithMany("Schedules")
                        .HasForeignKey("FlightID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");

                    b.Navigation("Flight");
                });

            modelBuilder.Entity("ARS.Models.City", b =>
                {
                    b.Navigation("FlightsAsDestination");

                    b.Navigation("FlightsAsOrigin");

                    b.Navigation("Schedules");
                });

            modelBuilder.Entity("ARS.Models.Flight", b =>
                {
                    b.Navigation("Reservations");

                    b.Navigation("Schedules");
                });

            modelBuilder.Entity("ARS.Models.PricingPolicy", b =>
                {
                    b.Navigation("Flights");
                });

            modelBuilder.Entity("ARS.Models.Reservation", b =>
                {
                    b.Navigation("Payments");

                    b.Navigation("Refunds");
                });

            modelBuilder.Entity("ARS.Models.Schedule", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("ARS.Models.User", b =>
                {
                    b.Navigation("Reservations");
                });
#pragma warning restore 612, 618
        }
    }
}
